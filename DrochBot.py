__version__ = (0, 0, 7)
#
#
# _           _            _ _
# | |         | |          (_) |
# | |     ___ | |_ ___  ___ _| | __
# | |    / _ \| __/ _ \/ __| | |/ /
# | |___| (_) | || (_) \__ \ |   <
# \_____/\___/ \__\___/|___/_|_|\_\
#
#              ¬© Copyright 2022
#
# üîí Licensed under the GNU AGPLv3
# üåê https://www.gnu.org/licenses/agpl-3.0.html

# meta developer: @hikkaftgmods


from .. import loader, utils
import asyncio


class DrochBotMod(loader.Module):
    """–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä—É–µ—Ç —Ä–∞–±–æ—Ç—É —Å @DrochBot (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –¥—Ä–æ—á–∫–∞ –∏ –¥—Ä.)"""

    strings = {"name": "DrochBot"}

    async def drochcmd(self, message):
        """–í–∫–ª—é—á–∞–µ—Ç—Å—è –∫–æ–º–∞–Ω–¥–∞ `/drochnut`. –ß—Ç–æ–±—ã –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å, `–î—Ä–æ—á–∫–∞ —Å—Ç–æ–ø`."""
        self.set("droch", True)
        while self.get("droch"):
            await message.reply("/drochnut")
            await asyncio.sleep(0.1)
            await utils.answer(
                message,
                "–°–ª–µ–¥—É—é—â–∞—è –∫–æ–º–∞–Ω–¥–∞ –±—É–¥–µ—Ç –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∞ —á–µ—Ä–µ–∑ 1 —á–∞—Å –∏ 5 –º–∏–Ω—É—Ç.",
            )
            await asyncio.sleep(3960)

    async def dickcmd(self, message):
        """–í–∫–ª—é—á–∞–µ—Ç—Å—è –∫–æ–º–∞–Ω–¥–∞ `/drochnut`. –ß—Ç–æ–±—ã –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å, `–•—É–π —Å—Ç–æ–ø`."""
        self.set("dick", True)
        while self.get("dick"):
            await message.reply("/dick")
            await asyncio.sleep(0.1)
            await utils.answer(
                message,
                "–°–ª–µ–¥—É—é—â–∞—è –∫–æ–º–∞–Ω–¥–∞ –±—É–¥–µ—Ç –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∞ —á–µ—Ä–µ–∑ 6 —á–∞—Å–æ–≤.",
            )
            await asyncio.sleep(21600)

    async def casecmd(self, message):
        """–í–∫–ª—é—á–∞–µ—Ç—Å—è –∫–æ–º–∞–Ω–¥–∞ `/case`. –ß—Ç–æ–±—ã –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å, `–∫–µ–π—Å —Å—Ç–æ–ø`."""
        self.set("case", True)
        while self.get("case"):
            await message.reply("/case")
            await asyncio.sleep(0.1)
            await utils.answer(
                message,
                "–°–ª–µ–¥—É—é—â–∞—è –∫–æ–º–∞–Ω–¥–∞ –±—É–¥–µ—Ç –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∞ —á–µ—Ä–µ–∑ 24 —á–∞—Åa.",
            )
            await asyncio.sleep(86400)

    async def watcher(self, message):
        if not getattr(message, "out", False):
            return

        if message.raw_text.lower() == "–¥—Ä–æ—á–∫–∞ —Å—Ç–æ–ø":
            self.set("droch", False)
            await utils.answer(message, "<b>–î—Ä–æ—á–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.</b>")
        if message.raw_text.lower() == "—Ö—É–π —Å—Ç–æ–ø":
            self.set("dick", False)
            await utils.answer(message, "<b>–†–æ—Å—Ç —Ö—É—è –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.</b>")
        if message.raw_text.lower() == "–∫–µ–π—Å —Å—Ç–æ–ø":
            self.set("case", False)
            await utils.answer(message, "<b>–û—Ç–∫—Ä—ã—Ç–∏–µ –∫–µ–π—Å–æ–≤ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ<b>")
